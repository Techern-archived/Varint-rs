var searchIndex = {};
searchIndex['varint'] = {"items":[[0,"","varint","An implementation of Google Protobuf's Variable-Length Integers",null,null],[17,"VARINT_32_MAX_BYTES","","The maximum number of bytes used by a 32-bit Varint",null,null],[17,"VARINT_64_MAX_BYTES","","The maximum number of bytes used by a 32-bit Varint",null,null],[8,"ZigZag","","A trait for enabling zig-zag encoding of various values",null,null],[10,"zigzag","","Encodes this ZigZag-enabled type into the type specified by implementation",0,{"inputs":[{"name":"zigzag"}],"output":{"name":"t"}}],[8,"VarintRead","","Extends the I/O Read trait to provide functions to read (currently only 32-bit) Variable-Length Integers",null,null],[11,"read_signed_varint_32","","Reads a signed 32-bit Varint from this VarintRead",1,{"inputs":[{"name":"varintread"}],"output":{"name":"result"}}],[11,"read_unsigned_varint_32","","Reads an unsigned 32-bit Varint from this VarintReader",1,{"inputs":[{"name":"varintread"}],"output":{"name":"result"}}],[8,"VarintWrite","","Extends the I/O Write trait to provide functions for writing (currently only 32-bit) variable-length integers",null,null],[11,"write_signed_varint_32","","Writes a signed varint 32 to this VarintWrite",2,{"inputs":[{"name":"varintwrite"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_unsigned_varint_32","","Writes an unsigned 32-bit Varint to this VarintWrite",2,{"inputs":[{"name":"varintwrite"},{"name":"u32"}],"output":{"name":"result"}}],[8,"VarintReader","","Extends the IoOperations Reader trait to provide functions to read (currently only 32-bit) Variable-Length Integers",null,null],[11,"read_signed_varint_32","","Reads a signed 32-bit Varint from this VarintReader",3,{"inputs":[{"name":"varintreader"}],"output":{"name":"result"}}],[11,"read_unsigned_varint_32","","Reads an unsigned 32-bit Varint from this VarintReader",3,{"inputs":[{"name":"varintreader"}],"output":{"name":"result"}}],[8,"VarintWriter","","Extends the IoOperations Writer to provide functions for writing (currently only 32-bit) variable-length integers",null,null],[11,"write_signed_varint_32","","Writes a signed varint 32 to this VarintWriter",4,{"inputs":[{"name":"varintwriter"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_unsigned_varint_32","","Writes an unsigned 32-bit Varint to this VarintWriter",4,{"inputs":[{"name":"varintwriter"},{"name":"u32"}],"output":{"name":"result"}}],[11,"read_signed_varint_32","","Reads a signed 32-bit Varint from this VarintRead",1,{"inputs":[{"name":"varintread"}],"output":{"name":"result"}}],[11,"read_unsigned_varint_32","","Reads an unsigned 32-bit Varint from this VarintReader",1,{"inputs":[{"name":"varintread"}],"output":{"name":"result"}}],[11,"write_signed_varint_32","","Writes a signed varint 32 to this VarintWrite",2,{"inputs":[{"name":"varintwrite"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_unsigned_varint_32","","Writes an unsigned 32-bit Varint to this VarintWrite",2,{"inputs":[{"name":"varintwrite"},{"name":"u32"}],"output":{"name":"result"}}],[11,"read_signed_varint_32","","Reads a signed 32-bit Varint from this VarintReader",3,{"inputs":[{"name":"varintreader"}],"output":{"name":"result"}}],[11,"read_unsigned_varint_32","","Reads an unsigned 32-bit Varint from this VarintReader",3,{"inputs":[{"name":"varintreader"}],"output":{"name":"result"}}],[11,"write_signed_varint_32","","Writes a signed varint 32 to this VarintWriter",4,{"inputs":[{"name":"varintwriter"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_unsigned_varint_32","","Writes an unsigned 32-bit Varint to this VarintWriter",4,{"inputs":[{"name":"varintwriter"},{"name":"u32"}],"output":{"name":"result"}}]],"paths":[[8,"ZigZag"],[8,"VarintRead"],[8,"VarintWrite"],[8,"VarintReader"],[8,"VarintWriter"]]};
searchIndex['io_operations'] = {"items":[[0,"","io_operations","Various I/O operations for Rust",null,null],[0,"reader","","Reading I/O operations",null,null],[8,"Reader","io_operations::reader","Extends the Read trait to provide common I/O reader operations",null,null],[11,"read_unsigned_byte","","Reads an unsigned byte from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_signed_byte","","Reads a signed byte from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_unsigned_be_short","","Reads an unsigned big-endian short from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_unsigned_le_short","","Reads an unsigned little-endian short from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_signed_be_short","","Reads a signed big-endian short from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_signed_le_short","","Reads a signed little-endian short from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_unsigned_be_int","","Reads an unsigned big-endian integer from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_unsigned_le_int","","Reads an unsigned little-endian integer from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_signed_be_int","","Reads a signed big-endian integer from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_signed_le_int","","Reads a signed little-endian integer from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_unsigned_be_long","","Reads an unsigned big-endian long from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_signed_be_long","","Reads a signed big-endian long from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_unsigned_le_long","","Reads an unsigned little-endian long from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_signed_le_long","","Reads a signed little-endian long from this Reader",0,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[0,"writer","io_operations","Writing I/O operations",null,null],[8,"Writer","io_operations::writer","Extends the Write trait to provide common I/O writer operations",null,null],[11,"write_unsigned_byte","","Writes an unsigned byte to this Writer",1,{"inputs":[{"name":"writer"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_signed_byte","","Writes a signed byte to this Writer",1,{"inputs":[{"name":"writer"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_unsigned_le_short","","Writes an unsigned little-endian short to this Writer",1,{"inputs":[{"name":"writer"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_unsigned_be_short","","Writes an unsigned big-endian short to this Writer",1,{"inputs":[{"name":"writer"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_signed_le_short","","Writes a signed little-endian short to this Writer",1,{"inputs":[{"name":"writer"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_signed_be_short","","Writes a signed big-endian short to this Writer",1,{"inputs":[{"name":"writer"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_unsigned_le_int","","Writes an unsigned little-endian integer to this Writer",1,{"inputs":[{"name":"writer"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_unsigned_be_int","","Writes an unsigned big-endian integer to this Writer",1,{"inputs":[{"name":"writer"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_signed_le_int","","Writes a signed little-endian integer to this Writer",1,{"inputs":[{"name":"writer"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_signed_be_int","","Writes a signed big-endian integer to this Writer",1,{"inputs":[{"name":"writer"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_unsigned_le_long","","Writes an unsigned little-endian long to this Writer",1,{"inputs":[{"name":"writer"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_signed_le_long","","Writes a signed little-endian long to this Writer",1,{"inputs":[{"name":"writer"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_unsigned_be_long","","Writes an unsigned big-endian long to this Writer",1,{"inputs":[{"name":"writer"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_signed_be_long","","Writes a signed big-endian long to this Writer",1,{"inputs":[{"name":"writer"},{"name":"i64"}],"output":{"name":"result"}}]],"paths":[[8,"Reader"],[8,"Writer"]]};
searchIndex['bit_utils'] = {"items":[[0,"","bit_utils","Bit utilities for Rust",null,null],[8,"BitInformation","","",null,null],[10,"number_of_bits","","Gets the number of bits contained in this type",0,{"inputs":[{"name":"bitinformation"}],"output":{"name":"usize"}}],[10,"has_x_bit","","Checks to see if bit X is set",0,{"inputs":[{"name":"bitinformation"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"is_bit_in_bounds","","Checks to see if the requested bit position is in bounds",0,{"inputs":[{"name":"bitinformation"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"has_most_signifigant_bit","","Checks to see if the most signifigant bit is set",0,{"inputs":[{"name":"bitinformation"}],"output":{"name":"bool"}}]],"paths":[[8,"BitInformation"]]};
initSearch(searchIndex);
